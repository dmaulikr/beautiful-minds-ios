//
//  BMPaintCode.m
//  ProjectName
//
//  Created by Alminty on 1/2/16.
//  Copyright (c) 2016 Alminty. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "BMPaintCode.h"


@implementation BMPaintCode

#pragma mark Cache

static UIColor* _color = nil;
static UIColor* _fill = nil;

static UIImage* _imageOfIconWriteBlack = nil;
static UIImage* _imageOfIconHomeBlack = nil;
static UIImage* _imageOfIconProfileBlack = nil;
static UIImage* _imageOfIconWriteSelected = nil;
static UIImage* _imageOfIconProfileSelected = nil;
static UIImage* _imageOfIconHomeSelected = nil;
static UIImage* _imageOfIconBackBlack = nil;
static UIImage* _imageOfIconOfLogo = nil;
static UIImage* _imageOfIconSubmitBlack = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _color = [UIColor colorWithRed: 0.992 green: 0.749 blue: 0.498 alpha: 1];
    _fill = [UIColor colorWithRed: 0.283 green: 0.283 blue: 0.283 alpha: 1];

}

#pragma mark Colors

+ (UIColor*)color { return _color; }
+ (UIColor*)fill { return _fill; }

#pragma mark Drawing Methods

+ (void)drawIconWriteBlack
{

    //// noun_36986_cc.svg Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = [UIBezierPath bezierPath];
        [bezierPath moveToPoint: CGPointMake(79.15, 5.87)];
        [bezierPath addLineToPoint: CGPointMake(97.25, 23.96)];
        [bezierPath addCurveToPoint: CGPointMake(97.25, 37.86) controlPoint1: CGPointMake(101.07, 27.78) controlPoint2: CGPointMake(101.07, 34.03)];
        [bezierPath addLineToPoint: CGPointMake(93.77, 41.33)];
        [bezierPath addCurveToPoint: CGPointMake(86.83, 41.33) controlPoint1: CGPointMake(91.86, 43.24) controlPoint2: CGPointMake(88.73, 43.24)];
        [bezierPath addLineToPoint: CGPointMake(61.78, 16.29)];
        [bezierPath addCurveToPoint: CGPointMake(61.78, 9.34) controlPoint1: CGPointMake(59.87, 14.37) controlPoint2: CGPointMake(59.87, 11.25)];
        [bezierPath addLineToPoint: CGPointMake(65.26, 5.87)];
        [bezierPath addCurveToPoint: CGPointMake(79.15, 5.87) controlPoint1: CGPointMake(69.08, 2.05) controlPoint2: CGPointMake(75.33, 2.05)];
        [bezierPath addLineToPoint: CGPointMake(79.15, 5.87)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(57.28, 23.45)];
        [bezierPath addLineToPoint: CGPointMake(79.67, 45.84)];
        [bezierPath addCurveToPoint: CGPointMake(79.67, 55.44) controlPoint1: CGPointMake(82.31, 48.48) controlPoint2: CGPointMake(82.31, 52.8)];
        [bezierPath addLineToPoint: CGPointMake(47.94, 87.18)];
        [bezierPath addCurveToPoint: CGPointMake(45.81, 88.62) controlPoint1: CGPointMake(47.31, 87.81) controlPoint2: CGPointMake(46.58, 88.29)];
        [bezierPath addCurveToPoint: CGPointMake(45.22, 88.84) controlPoint1: CGPointMake(45.61, 88.7) controlPoint2: CGPointMake(45.42, 88.77)];
        [bezierPath addLineToPoint: CGPointMake(12.86, 99.68)];
        [bezierPath addLineToPoint: CGPointMake(11.87, 99.9)];
        [bezierPath addCurveToPoint: CGPointMake(3.15, 91.47) controlPoint1: CGPointMake(6.85, 101.02) controlPoint2: CGPointMake(2.08, 96.8)];
        [bezierPath addLineToPoint: CGPointMake(3.38, 90.47)];
        [bezierPath addLineToPoint: CGPointMake(14.2, 58.16)];
        [bezierPath addCurveToPoint: CGPointMake(15.95, 55.19) controlPoint1: CGPointMake(14.57, 57.06) controlPoint2: CGPointMake(15.1, 56.03)];
        [bezierPath addLineToPoint: CGPointMake(47.68, 23.45)];
        [bezierPath addCurveToPoint: CGPointMake(57.28, 23.45) controlPoint1: CGPointMake(50.32, 20.81) controlPoint2: CGPointMake(54.64, 20.81)];
        [bezierPath addLineToPoint: CGPointMake(57.28, 23.45)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(34.87, 83.7)];
        [bezierPath addLineToPoint: CGPointMake(19.43, 68.26)];
        [bezierPath addLineToPoint: CGPointMake(14.73, 81.8)];
        [bezierPath addLineToPoint: CGPointMake(21.33, 88.4)];
        [bezierPath addLineToPoint: CGPointMake(34.87, 83.7)];
        [bezierPath addLineToPoint: CGPointMake(34.87, 83.7)];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [BMPaintCode.fill setFill];
        [bezierPath fill];
    }
}

+ (void)drawIconHomeBlack
{

    //// noun_27975_cc.svg Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = [UIBezierPath bezierPath];
        [bezierPath moveToPoint: CGPointMake(98.6, 48.2)];
        [bezierPath addLineToPoint: CGPointMake(90.44, 40.01)];
        [bezierPath addLineToPoint: CGPointMake(90.44, 19.58)];
        [bezierPath addCurveToPoint: CGPointMake(88.67, 17.8) controlPoint1: CGPointMake(90.44, 18.6) controlPoint2: CGPointMake(89.64, 17.8)];
        [bezierPath addLineToPoint: CGPointMake(76.04, 17.8)];
        [bezierPath addCurveToPoint: CGPointMake(74.27, 19.58) controlPoint1: CGPointMake(75.06, 17.8) controlPoint2: CGPointMake(74.27, 18.6)];
        [bezierPath addLineToPoint: CGPointMake(74.27, 23.81)];
        [bezierPath addLineToPoint: CGPointMake(57.89, 7.4)];
        [bezierPath addCurveToPoint: CGPointMake(47.02, 7.4) controlPoint1: CGPointMake(54.89, 4.39) controlPoint2: CGPointMake(50.02, 4.39)];
        [bezierPath addLineToPoint: CGPointMake(6.31, 48.2)];
        [bezierPath addCurveToPoint: CGPointMake(6.31, 59.09) controlPoint1: CGPointMake(3.3, 51.21) controlPoint2: CGPointMake(3.3, 56.09)];
        [bezierPath addCurveToPoint: CGPointMake(14.41, 62.93) controlPoint1: CGPointMake(6.31, 59.09) controlPoint2: CGPointMake(12.34, 62.38)];
        [bezierPath addLineToPoint: CGPointMake(14.41, 86.61)];
        [bezierPath addCurveToPoint: CGPointMake(27.1, 99.32) controlPoint1: CGPointMake(14.41, 93.63) controlPoint2: CGPointMake(20.09, 99.32)];
        [bezierPath addLineToPoint: CGPointMake(36.96, 99.32)];
        [bezierPath addCurveToPoint: CGPointMake(36.92, 98.99) controlPoint1: CGPointMake(36.95, 99.21) controlPoint2: CGPointMake(36.92, 99.11)];
        [bezierPath addLineToPoint: CGPointMake(36.92, 75.27)];
        [bezierPath addCurveToPoint: CGPointMake(40.62, 71.57) controlPoint1: CGPointMake(36.92, 73.23) controlPoint2: CGPointMake(38.58, 71.57)];
        [bezierPath addLineToPoint: CGPointMake(64.29, 71.57)];
        [bezierPath addCurveToPoint: CGPointMake(67.98, 75.27) controlPoint1: CGPointMake(66.33, 71.57) controlPoint2: CGPointMake(67.98, 73.23)];
        [bezierPath addLineToPoint: CGPointMake(67.98, 98.99)];
        [bezierPath addCurveToPoint: CGPointMake(67.95, 99.32) controlPoint1: CGPointMake(67.98, 99.11) controlPoint2: CGPointMake(67.96, 99.21)];
        [bezierPath addLineToPoint: CGPointMake(77.81, 99.32)];
        [bezierPath addCurveToPoint: CGPointMake(90.5, 86.61) controlPoint1: CGPointMake(84.82, 99.32) controlPoint2: CGPointMake(90.5, 93.63)];
        [bezierPath addLineToPoint: CGPointMake(90.5, 62.93)];
        [bezierPath addCurveToPoint: CGPointMake(98.6, 59.09) controlPoint1: CGPointMake(92.57, 62.38) controlPoint2: CGPointMake(98.6, 59.09)];
        [bezierPath addCurveToPoint: CGPointMake(98.6, 48.2) controlPoint1: CGPointMake(101.6, 56.08) controlPoint2: CGPointMake(101.6, 51.2)];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [BMPaintCode.fill setFill];
        [bezierPath fill];
    }
}

+ (void)drawIconProfileBlack
{

    //// noun_152408_cc.svg Group
    {
        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(36, 4.5, 35, 34)];
        [BMPaintCode.fill setFill];
        [ovalPath fill];


        //// Bezier Drawing
        UIBezierPath* bezierPath = [UIBezierPath bezierPath];
        [bezierPath moveToPoint: CGPointMake(80, 61.31)];
        [bezierPath addCurveToPoint: CGPointMake(53.5, 99.5) controlPoint1: CGPointMake(80, 74.74) controlPoint2: CGPointMake(68.15, 99.5)];
        [bezierPath addCurveToPoint: CGPointMake(27, 61.31) controlPoint1: CGPointMake(38.85, 99.5) controlPoint2: CGPointMake(27, 74.64)];
        [bezierPath addCurveToPoint: CGPointMake(53.5, 41.74) controlPoint1: CGPointMake(27, 47.98) controlPoint2: CGPointMake(38.85, 41.74)];
        [bezierPath addCurveToPoint: CGPointMake(80, 61.31) controlPoint1: CGPointMake(68.15, 41.74) controlPoint2: CGPointMake(80, 47.98)];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [BMPaintCode.fill setFill];
        [bezierPath fill];
    }
}

+ (void)drawIconWriteSelected
{

    //// noun_36986_cc.svg Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = [UIBezierPath bezierPath];
        [bezierPath moveToPoint: CGPointMake(79.15, 5.87)];
        [bezierPath addLineToPoint: CGPointMake(97.25, 23.96)];
        [bezierPath addCurveToPoint: CGPointMake(97.25, 37.86) controlPoint1: CGPointMake(101.07, 27.78) controlPoint2: CGPointMake(101.07, 34.03)];
        [bezierPath addLineToPoint: CGPointMake(93.77, 41.33)];
        [bezierPath addCurveToPoint: CGPointMake(86.83, 41.33) controlPoint1: CGPointMake(91.86, 43.24) controlPoint2: CGPointMake(88.73, 43.24)];
        [bezierPath addLineToPoint: CGPointMake(61.78, 16.29)];
        [bezierPath addCurveToPoint: CGPointMake(61.78, 9.34) controlPoint1: CGPointMake(59.87, 14.37) controlPoint2: CGPointMake(59.87, 11.25)];
        [bezierPath addLineToPoint: CGPointMake(65.26, 5.87)];
        [bezierPath addCurveToPoint: CGPointMake(79.15, 5.87) controlPoint1: CGPointMake(69.08, 2.05) controlPoint2: CGPointMake(75.33, 2.05)];
        [bezierPath addLineToPoint: CGPointMake(79.15, 5.87)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(57.28, 23.45)];
        [bezierPath addLineToPoint: CGPointMake(79.67, 45.84)];
        [bezierPath addCurveToPoint: CGPointMake(79.67, 55.44) controlPoint1: CGPointMake(82.31, 48.48) controlPoint2: CGPointMake(82.31, 52.8)];
        [bezierPath addLineToPoint: CGPointMake(47.94, 87.18)];
        [bezierPath addCurveToPoint: CGPointMake(45.81, 88.62) controlPoint1: CGPointMake(47.31, 87.81) controlPoint2: CGPointMake(46.58, 88.29)];
        [bezierPath addCurveToPoint: CGPointMake(45.22, 88.84) controlPoint1: CGPointMake(45.61, 88.7) controlPoint2: CGPointMake(45.42, 88.77)];
        [bezierPath addLineToPoint: CGPointMake(12.86, 99.68)];
        [bezierPath addLineToPoint: CGPointMake(11.87, 99.9)];
        [bezierPath addCurveToPoint: CGPointMake(3.15, 91.47) controlPoint1: CGPointMake(6.85, 101.02) controlPoint2: CGPointMake(2.08, 96.8)];
        [bezierPath addLineToPoint: CGPointMake(3.38, 90.47)];
        [bezierPath addLineToPoint: CGPointMake(14.2, 58.16)];
        [bezierPath addCurveToPoint: CGPointMake(15.95, 55.19) controlPoint1: CGPointMake(14.57, 57.06) controlPoint2: CGPointMake(15.1, 56.03)];
        [bezierPath addLineToPoint: CGPointMake(47.68, 23.45)];
        [bezierPath addCurveToPoint: CGPointMake(57.28, 23.45) controlPoint1: CGPointMake(50.32, 20.81) controlPoint2: CGPointMake(54.64, 20.81)];
        [bezierPath addLineToPoint: CGPointMake(57.28, 23.45)];
        [bezierPath closePath];
        [bezierPath moveToPoint: CGPointMake(34.87, 83.7)];
        [bezierPath addLineToPoint: CGPointMake(19.43, 68.26)];
        [bezierPath addLineToPoint: CGPointMake(14.73, 81.8)];
        [bezierPath addLineToPoint: CGPointMake(21.33, 88.4)];
        [bezierPath addLineToPoint: CGPointMake(34.87, 83.7)];
        [bezierPath addLineToPoint: CGPointMake(34.87, 83.7)];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [BMPaintCode.color setFill];
        [bezierPath fill];
    }
}

+ (void)drawIconProfileSelected
{

    //// noun_152408_cc.svg Group
    {
        //// Oval Drawing
        UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(36, 4.5, 35, 34)];
        [BMPaintCode.color setFill];
        [ovalPath fill];


        //// Bezier Drawing
        UIBezierPath* bezierPath = [UIBezierPath bezierPath];
        [bezierPath moveToPoint: CGPointMake(80, 61.31)];
        [bezierPath addCurveToPoint: CGPointMake(53.5, 99.5) controlPoint1: CGPointMake(80, 74.74) controlPoint2: CGPointMake(68.15, 99.5)];
        [bezierPath addCurveToPoint: CGPointMake(27, 61.31) controlPoint1: CGPointMake(38.85, 99.5) controlPoint2: CGPointMake(27, 74.64)];
        [bezierPath addCurveToPoint: CGPointMake(53.5, 41.74) controlPoint1: CGPointMake(27, 47.98) controlPoint2: CGPointMake(38.85, 41.74)];
        [bezierPath addCurveToPoint: CGPointMake(80, 61.31) controlPoint1: CGPointMake(68.15, 41.74) controlPoint2: CGPointMake(80, 47.98)];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [BMPaintCode.color setFill];
        [bezierPath fill];
    }
}

+ (void)drawIconHomeSelected
{

    //// noun_27975_cc.svg Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = [UIBezierPath bezierPath];
        [bezierPath moveToPoint: CGPointMake(98.6, 48.2)];
        [bezierPath addLineToPoint: CGPointMake(90.44, 40.01)];
        [bezierPath addLineToPoint: CGPointMake(90.44, 19.58)];
        [bezierPath addCurveToPoint: CGPointMake(88.67, 17.8) controlPoint1: CGPointMake(90.44, 18.6) controlPoint2: CGPointMake(89.64, 17.8)];
        [bezierPath addLineToPoint: CGPointMake(76.04, 17.8)];
        [bezierPath addCurveToPoint: CGPointMake(74.27, 19.58) controlPoint1: CGPointMake(75.06, 17.8) controlPoint2: CGPointMake(74.27, 18.6)];
        [bezierPath addLineToPoint: CGPointMake(74.27, 23.81)];
        [bezierPath addLineToPoint: CGPointMake(57.89, 7.4)];
        [bezierPath addCurveToPoint: CGPointMake(47.02, 7.4) controlPoint1: CGPointMake(54.89, 4.39) controlPoint2: CGPointMake(50.02, 4.39)];
        [bezierPath addLineToPoint: CGPointMake(6.31, 48.2)];
        [bezierPath addCurveToPoint: CGPointMake(6.31, 59.09) controlPoint1: CGPointMake(3.3, 51.21) controlPoint2: CGPointMake(3.3, 56.09)];
        [bezierPath addCurveToPoint: CGPointMake(14.41, 62.93) controlPoint1: CGPointMake(6.31, 59.09) controlPoint2: CGPointMake(12.34, 62.38)];
        [bezierPath addLineToPoint: CGPointMake(14.41, 86.61)];
        [bezierPath addCurveToPoint: CGPointMake(27.1, 99.32) controlPoint1: CGPointMake(14.41, 93.63) controlPoint2: CGPointMake(20.09, 99.32)];
        [bezierPath addLineToPoint: CGPointMake(36.96, 99.32)];
        [bezierPath addCurveToPoint: CGPointMake(36.92, 98.99) controlPoint1: CGPointMake(36.95, 99.21) controlPoint2: CGPointMake(36.92, 99.11)];
        [bezierPath addLineToPoint: CGPointMake(36.92, 75.27)];
        [bezierPath addCurveToPoint: CGPointMake(40.62, 71.57) controlPoint1: CGPointMake(36.92, 73.23) controlPoint2: CGPointMake(38.58, 71.57)];
        [bezierPath addLineToPoint: CGPointMake(64.29, 71.57)];
        [bezierPath addCurveToPoint: CGPointMake(67.98, 75.27) controlPoint1: CGPointMake(66.33, 71.57) controlPoint2: CGPointMake(67.98, 73.23)];
        [bezierPath addLineToPoint: CGPointMake(67.98, 98.99)];
        [bezierPath addCurveToPoint: CGPointMake(67.95, 99.32) controlPoint1: CGPointMake(67.98, 99.11) controlPoint2: CGPointMake(67.96, 99.21)];
        [bezierPath addLineToPoint: CGPointMake(77.81, 99.32)];
        [bezierPath addCurveToPoint: CGPointMake(90.5, 86.61) controlPoint1: CGPointMake(84.82, 99.32) controlPoint2: CGPointMake(90.5, 93.63)];
        [bezierPath addLineToPoint: CGPointMake(90.5, 62.93)];
        [bezierPath addCurveToPoint: CGPointMake(98.6, 59.09) controlPoint1: CGPointMake(92.57, 62.38) controlPoint2: CGPointMake(98.6, 59.09)];
        [bezierPath addCurveToPoint: CGPointMake(98.6, 48.2) controlPoint1: CGPointMake(101.6, 56.08) controlPoint2: CGPointMake(101.6, 51.2)];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [BMPaintCode.color setFill];
        [bezierPath fill];
    }
}

+ (void)drawIconBackBlack
{

    //// noun_185728_cc.svg Group
    {
        //// Group 2
        {
            //// Bezier Drawing
            UIBezierPath* bezierPath = [UIBezierPath bezierPath];
            [bezierPath moveToPoint: CGPointMake(45.18, 63.19)];
            [bezierPath addCurveToPoint: CGPointMake(31.48, 51.57) controlPoint1: CGPointMake(40.3, 59.66) controlPoint2: CGPointMake(35.73, 55.74)];
            [bezierPath addLineToPoint: CGPointMake(31.4, 51.49)];
            [bezierPath addCurveToPoint: CGPointMake(31.4, 46.51) controlPoint1: CGPointMake(29.9, 50.2) controlPoint2: CGPointMake(29.9, 47.8)];
            [bezierPath addCurveToPoint: CGPointMake(45.26, 34.73) controlPoint1: CGPointMake(35.73, 42.26) controlPoint2: CGPointMake(40.38, 38.26)];
            [bezierPath addLineToPoint: CGPointMake(47.08, 33.36)];
            [bezierPath addCurveToPoint: CGPointMake(50.86, 35.21) controlPoint1: CGPointMake(48.57, 32.08) controlPoint2: CGPointMake(50.86, 33.2)];
            [bezierPath addLineToPoint: CGPointMake(50.86, 43.39)];
            [bezierPath addCurveToPoint: CGPointMake(74.89, 42.1) controlPoint1: CGPointMake(58.89, 42.99) controlPoint2: CGPointMake(66.93, 42.51)];
            [bezierPath addCurveToPoint: CGPointMake(81.82, 41.7) controlPoint1: CGPointMake(77.17, 41.94) controlPoint2: CGPointMake(79.53, 41.78)];
            [bezierPath addCurveToPoint: CGPointMake(89.46, 47.16) controlPoint1: CGPointMake(85.44, 41.46) controlPoint2: CGPointMake(88.67, 43.71)];
            [bezierPath addCurveToPoint: CGPointMake(85.44, 55.65) controlPoint1: CGPointMake(90.33, 50.68) controlPoint2: CGPointMake(88.67, 54.13)];
            [bezierPath addCurveToPoint: CGPointMake(81.82, 56.3) controlPoint1: CGPointMake(84.26, 56.22) controlPoint2: CGPointMake(83.08, 56.38)];
            [bezierPath addCurveToPoint: CGPointMake(71.1, 55.65) controlPoint1: CGPointMake(78.27, 56.06) controlPoint2: CGPointMake(74.65, 55.9)];
            [bezierPath addCurveToPoint: CGPointMake(54.32, 54.69) controlPoint1: CGPointMake(65.51, 55.33) controlPoint2: CGPointMake(59.92, 55.01)];
            [bezierPath addCurveToPoint: CGPointMake(50.78, 54.53) controlPoint1: CGPointMake(53.14, 54.61) controlPoint2: CGPointMake(51.96, 54.61)];
            [bezierPath addLineToPoint: CGPointMake(50.78, 62.79)];
            [bezierPath addCurveToPoint: CGPointMake(47, 64.64) controlPoint1: CGPointMake(50.78, 64.8) controlPoint2: CGPointMake(48.49, 65.92)];
            [bezierPath addLineToPoint: CGPointMake(45.18, 63.19)];
            [bezierPath closePath];
            bezierPath.miterLimit = 4;

            [BMPaintCode.fill setFill];
            [bezierPath fill];
        }
    }
}

+ (void)drawIconOfLogo
{

    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(66, 16, 59, 72)];
    [UIColor.grayColor setFill];
    [rectanglePath fill];
}

+ (void)drawIconSubmitBlack
{

    //// noun_34714_cc.svg Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = [UIBezierPath bezierPath];
        [bezierPath moveToPoint: CGPointMake(172.79, 27.24)];
        [bezierPath addCurveToPoint: CGPointMake(164.53, 28.16) controlPoint1: CGPointMake(170.25, 25.23) controlPoint2: CGPointMake(166.56, 25.64)];
        [bezierPath addLineToPoint: CGPointMake(141.61, 62.46)];
        [bezierPath addLineToPoint: CGPointMake(131.6, 52.51)];
        [bezierPath addCurveToPoint: CGPointMake(124.38, 52.27) controlPoint1: CGPointMake(129.54, 50.46) controlPoint2: CGPointMake(126.31, 50.36)];
        [bezierPath addCurveToPoint: CGPointMake(124.62, 59.45) controlPoint1: CGPointMake(122.45, 54.18) controlPoint2: CGPointMake(122.56, 57.4)];
        [bezierPath addLineToPoint: CGPointMake(139.71, 74.45)];
        [bezierPath addCurveToPoint: CGPointMake(145.98, 75.3) controlPoint1: CGPointMake(141.47, 76.2) controlPoint2: CGPointMake(144.05, 76.44)];
        [bezierPath addCurveToPoint: CGPointMake(148.18, 73.64) controlPoint1: CGPointMake(146.81, 74.93) controlPoint2: CGPointMake(147.57, 74.39)];
        [bezierPath addLineToPoint: CGPointMake(173.72, 35.44)];
        [bezierPath addCurveToPoint: CGPointMake(172.79, 27.24) controlPoint1: CGPointMake(175.74, 32.92) controlPoint2: CGPointMake(175.32, 29.25)];
        [bezierPath closePath];
        bezierPath.miterLimit = 4;

        [BMPaintCode.fill setFill];
        [bezierPath fill];
    }
}

#pragma mark Generated Images

+ (UIImage*)imageOfIconWriteBlack
{
    if (_imageOfIconWriteBlack)
        return _imageOfIconWriteBlack;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(105, 105), NO, 0.0f);
    [BMPaintCode drawIconWriteBlack];

    _imageOfIconWriteBlack = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfIconWriteBlack;
}

+ (UIImage*)imageOfIconHomeBlack
{
    if (_imageOfIconHomeBlack)
        return _imageOfIconHomeBlack;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(105, 105), NO, 0.0f);
    [BMPaintCode drawIconHomeBlack];

    _imageOfIconHomeBlack = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfIconHomeBlack;
}

+ (UIImage*)imageOfIconProfileBlack
{
    if (_imageOfIconProfileBlack)
        return _imageOfIconProfileBlack;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(105, 105), NO, 0.0f);
    [BMPaintCode drawIconProfileBlack];

    _imageOfIconProfileBlack = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfIconProfileBlack;
}

+ (UIImage*)imageOfIconWriteSelected
{
    if (_imageOfIconWriteSelected)
        return _imageOfIconWriteSelected;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(105, 105), NO, 0.0f);
    [BMPaintCode drawIconWriteSelected];

    _imageOfIconWriteSelected = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfIconWriteSelected;
}

+ (UIImage*)imageOfIconProfileSelected
{
    if (_imageOfIconProfileSelected)
        return _imageOfIconProfileSelected;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(105, 105), NO, 0.0f);
    [BMPaintCode drawIconProfileSelected];

    _imageOfIconProfileSelected = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfIconProfileSelected;
}

+ (UIImage*)imageOfIconHomeSelected
{
    if (_imageOfIconHomeSelected)
        return _imageOfIconHomeSelected;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(105, 105), NO, 0.0f);
    [BMPaintCode drawIconHomeSelected];

    _imageOfIconHomeSelected = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfIconHomeSelected;
}

+ (UIImage*)imageOfIconBackBlack
{
    if (_imageOfIconBackBlack)
        return _imageOfIconBackBlack;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(200, 100), NO, 0.0f);
    [BMPaintCode drawIconBackBlack];

    _imageOfIconBackBlack = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfIconBackBlack;
}

+ (UIImage*)imageOfIconOfLogo
{
    if (_imageOfIconOfLogo)
        return _imageOfIconOfLogo;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(200, 100), NO, 0.0f);
    [BMPaintCode drawIconOfLogo];

    _imageOfIconOfLogo = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfIconOfLogo;
}

+ (UIImage*)imageOfIconSubmitBlack
{
    if (_imageOfIconSubmitBlack)
        return _imageOfIconSubmitBlack;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(200, 100), NO, 0.0f);
    [BMPaintCode drawIconSubmitBlack];

    _imageOfIconSubmitBlack = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfIconSubmitBlack;
}

#pragma mark Customization Infrastructure

- (void)setIconWriteBlackTargets: (NSArray*)iconWriteBlackTargets
{
    _iconWriteBlackTargets = iconWriteBlackTargets;

    for (id target in self.iconWriteBlackTargets)
        [target performSelector: @selector(setImage:) withObject: BMPaintCode.imageOfIconWriteBlack];
}

- (void)setIconHomeBlackTargets: (NSArray*)iconHomeBlackTargets
{
    _iconHomeBlackTargets = iconHomeBlackTargets;

    for (id target in self.iconHomeBlackTargets)
        [target performSelector: @selector(setImage:) withObject: BMPaintCode.imageOfIconHomeBlack];
}

- (void)setIconProfileBlackTargets: (NSArray*)iconProfileBlackTargets
{
    _iconProfileBlackTargets = iconProfileBlackTargets;

    for (id target in self.iconProfileBlackTargets)
        [target performSelector: @selector(setImage:) withObject: BMPaintCode.imageOfIconProfileBlack];
}

- (void)setIconWriteSelectedTargets: (NSArray*)iconWriteSelectedTargets
{
    _iconWriteSelectedTargets = iconWriteSelectedTargets;

    for (id target in self.iconWriteSelectedTargets)
        [target performSelector: @selector(setImage:) withObject: BMPaintCode.imageOfIconWriteSelected];
}

- (void)setIconProfileSelectedTargets: (NSArray*)iconProfileSelectedTargets
{
    _iconProfileSelectedTargets = iconProfileSelectedTargets;

    for (id target in self.iconProfileSelectedTargets)
        [target performSelector: @selector(setImage:) withObject: BMPaintCode.imageOfIconProfileSelected];
}

- (void)setIconHomeSelectedTargets: (NSArray*)iconHomeSelectedTargets
{
    _iconHomeSelectedTargets = iconHomeSelectedTargets;

    for (id target in self.iconHomeSelectedTargets)
        [target performSelector: @selector(setImage:) withObject: BMPaintCode.imageOfIconHomeSelected];
}

- (void)setIconBackBlackTargets: (NSArray*)iconBackBlackTargets
{
    _iconBackBlackTargets = iconBackBlackTargets;

    for (id target in self.iconBackBlackTargets)
        [target performSelector: @selector(setImage:) withObject: BMPaintCode.imageOfIconBackBlack];
}

- (void)setIconOfLogoTargets: (NSArray*)iconOfLogoTargets
{
    _iconOfLogoTargets = iconOfLogoTargets;

    for (id target in self.iconOfLogoTargets)
        [target performSelector: @selector(setImage:) withObject: BMPaintCode.imageOfIconOfLogo];
}

- (void)setIconSubmitBlackTargets: (NSArray*)iconSubmitBlackTargets
{
    _iconSubmitBlackTargets = iconSubmitBlackTargets;

    for (id target in self.iconSubmitBlackTargets)
        [target performSelector: @selector(setImage:) withObject: BMPaintCode.imageOfIconSubmitBlack];
}


@end
